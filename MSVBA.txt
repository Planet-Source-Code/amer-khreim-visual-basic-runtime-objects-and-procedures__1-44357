VBA; // Visual Basic For Applications

Enum VbVarType;
GUID={ED822010-6D7F-11CF-B949-00AA004455EA};
  vbEmpty = 0;
  vbNull = 1;
  vbInteger = 2;
  vbLong = 3;
  vbSingle = 4;
  vbDouble = 5;
  vbCurrency = 6;
  vbDate = 7;
  vbString = 8;
  vbObject = 9;
  vbError = 10;
  vbBoolean = 11;
  vbVariant = 12;
  vbDataObject = 13;
  vbDecimal = 14;
  vbByte = 17;
  vbUserDefinedType = 36;
  vbArray = $2000;

Enum VbMsgBoxStyle;
GUID={ED822011-6D7F-11CF-B949-00AA004455EA};
  vbOKOnly = 0;
  vbOKCancel = 1;
  vbAbortRetryIgnore = 2;
  vbYesNoCancel = 3;
  vbYesNo = 4;
  vbRetryCancel = 5;
  vbCritical = 16;
  vbQuestion = 32;
  vbExclamation = 48;
  vbInformation = 64;
  vbDefaultButton1 = 0;
  vbDefaultButton2 = $100;
  vbDefaultButton3 = $200;
  vbDefaultButton4 = $300;
  vbApplicationModal = 0;
  vbSystemModal = $1000;
  vbMsgBoxHelpButton = $4000;
  vbMsgBoxRight = $80000;
  vbMsgBoxRtlReading = $100000;
  vbMsgBoxSetForeground = $10000;

Enum VbMsgBoxResult;
GUID={ED822012-6D7F-11CF-B949-00AA004455EA};
  vbOK = 1;
  vbCancel = 2;
  vbAbort = 3;
  vbRetry = 4;
  vbIgnore = 5;
  vbYes = 6;
  vbNo = 7;

Enum VbFileAttribute;
GUID={ED822013-6D7F-11CF-B949-00AA004455EA};
  vbNormal = 0;
  vbReadOnly = 1;
  vbHidden = 2;
  vbSystem = 4;
  vbVolume = 8;
  vbDirectory = 16;
  vbArchive = 32;
  vbAlias = 64;

Enum VbStrConv;
GUID={ED822014-6D7F-11CF-B949-00AA004455EA};
  vbUpperCase = 1;
  vbLowerCase = 2;
  vbProperCase = 3;
  vbWide = 4;
  vbNarrow = 8;
  vbKatakana = 16;
  vbHiragana = 32;
  vbUnicode = 64;
  vbFromUnicode = 128;

Enum VbDayOfWeek;
GUID={ED822015-6D7F-11CF-B949-00AA004455EA};
  vbUseSystemDayOfWeek = 0;
  vbSunday = 1;
  vbMonday = 2;
  vbTuesday = 3;
  vbWednesday = 4;
  vbThursday = 5;
  vbFriday = 6;
  vbSaturday = 7;

Enum VbFirstWeekOfYear;
GUID={ED822016-6D7F-11CF-B949-00AA004455EA};
  vbUseSystem = 0;
  vbFirstJan1 = 1;
  vbFirstFourDays = 2;
  vbFirstFullWeek = 3;

Enum VbIMEStatus;
GUID={ED822017-6D7F-11CF-B949-00AA004455EA};
  vbIMENoOp = 0;
  vbIMEModeNoControl = 0;
  vbIMEOn = 1;
  vbIMEModeOn = 1;
  vbIMEOff = 2;
  vbIMEModeOff = 2;
  vbIMEDisable = 3;
  vbIMEModeDisable = 3;
  vbIMEHiragana = 4;
  vbIMEModeHiragana = 4;
  vbIMEKatakanaDbl = 5;
  vbIMEModeKatakana = 5;
  vbIMEKatakanaSng = 6;
  vbIMEModeKatakanaHalf = 6;
  vbIMEAlphaDbl = 7;
  vbIMEModeAlphaFull = 7;
  vbIMEAlphaSng = 8;
  vbIMEModeAlpha = 8;
  vbIMEModeHangulFull = 9;
  vbIMEModeHangul = 10;

Enum VbAppWinStyle;
GUID={ED822018-6D7F-11CF-B949-00AA004455EA};
  vbHide = 0;
  vbNormalFocus = 1;
  vbMinimizedFocus = 2;
  vbMaximizedFocus = 3;
  vbNormalNoFocus = 4;
  vbMinimizedNoFocus = 6;

Enum VbCompareMethod;
GUID={ED822019-6D7F-11CF-B949-00AA004455EA};
  vbBinaryCompare = 0;
  vbTextCompare = 1;
  vbDatabaseCompare = 2;

Enum VbCalendar;
GUID={ED822020-6D7F-11CF-B949-00AA004455EA};
  vbCalGreg = 0;
  vbCalHijri = 1;

Enum VbDateTimeFormat;
GUID={07D7F561-A08E-11D0-9706-00A0C911004E};
  vbGeneralDate = 0;
  vbLongDate = 1;
  vbShortDate = 2;
  vbLongTime = 3;
  vbShortTime = 4;

Enum VbTriState;
GUID={07D7F562-A08E-11D0-9706-00A0C911004E};
  vbUseDefault = -2;
  vbTrue = -1;
  vbFalse = 0;

Enum VbCallType;
GUID={07D7F563-A08E-11D0-9706-00A0C911004E};
  VbMethod = 1;
  VbGet = 2;
  VbLet = 4;
  VbSet = 8;

Module Constants;
GUID={343DB180-2BCC-1069-82D4-00DD010EDFAA};
  vbObjectError = $80040000;
  vbNullString = ;
  vbNullChar = #0;
  vbCrLf = #13#10;
  vbNewLine = #13#10;
  vbCr = #13;
  vbLf = #10;
  vbBack = #8;
  vbFormFeed = #12;
  vbTab = #9;
  vbVerticalTab = #11;

Module Strings;
GUID={35BFBDA0-2BCC-1069-82D5-00DD010EDFAA};
  function Asc(String:BSTR): I2;
  function _B_str_Chr(CharCode:I4): BSTR;
  function _B_var_Chr(CharCode:I4): variant;
  function _B_str_LCase(String:BSTR): BSTR;
  function _B_var_LCase(String:^variant): variant;
  function _B_str_Mid(String:BSTR; Start:I4; [Length:^variant]): BSTR;
  function _B_var_Mid(String:^variant; Start:I4; [Length:^variant]): variant;
  function _B_str_MidB(String:BSTR; Start:I4; [Length:^variant]): BSTR;
  function _B_var_MidB(String:^variant; Start:I4; [Length:^variant]): variant;
  function InStr(Start:^variant; String1:^variant; String2:^variant; Compare:VbCompareMethod): variant;
  function InStrB(Start:^variant; String1:^variant; String2:^variant; Compare:VbCompareMethod): variant;
  function _B_str_Left(String:BSTR; Length:I4): BSTR;
  function _B_var_Left(String:^variant; Length:I4): variant;
  function _B_str_LeftB(String:BSTR; Length:I4): BSTR;
  function _B_var_LeftB(String:^variant; Length:I4): variant;
  function _B_str_LTrim(String:BSTR): BSTR;
  function _B_var_LTrim(String:^variant): variant;
  function _B_str_RightB(String:BSTR; Length:I4): BSTR;
  function _B_var_RightB(String:^variant; Length:I4): variant;
  function _B_str_Right(String:BSTR; Length:I4): BSTR;
  function _B_var_Right(String:^variant; Length:I4): variant;
  function _B_str_RTrim(String:BSTR): BSTR;
  function _B_var_RTrim(String:^variant): variant;
  function _B_str_Space(Number:I4): BSTR;
  function _B_var_Space(Number:I4): variant;
  function _B_var_StrConv(String:^variant; Conversion:VbStrConv; LocaleID:I4): variant;
  function _B_str_String(Number:I4; Character:^variant): BSTR;
  function _B_var_String(Number:I4; Character:^variant): variant;
  function _B_str_Trim(String:BSTR): BSTR;
  function _B_var_Trim(String:^variant): variant;
  function _B_str_UCase(String:BSTR): BSTR;
  function _B_var_UCase(String:^variant): variant;
  function StrComp(String1:^variant; String2:^variant; Compare:VbCompareMethod): variant;
  function _B_str_Format(Expression:^variant; Format:^variant; FirstDayOfWeek:VbDayOfWeek; FirstWeekOfYear:VbFirstWeekOfYear): BSTR;
  function _B_var_Format(Expression:^variant; Format:^variant; FirstDayOfWeek:VbDayOfWeek; FirstWeekOfYear:VbFirstWeekOfYear): variant;
  function Len(Expression:^variant): variant;
  function LenB(Expression:^variant): variant;
  function AscB(String:BSTR): UI1;
  function _B_str_ChrB(CharCode:UI1): BSTR;
  function _B_var_ChrB(CharCode:UI1): variant;
  function AscW(String:BSTR): I2;
  function _B_str_ChrW(CharCode:I4): BSTR;
  function _B_var_ChrW(CharCode:I4): variant;
  function FormatDateTime(Expression:^variant; NamedFormat:VbDateTimeFormat): BSTR;
  function FormatNumber(Expression:^variant; NumDigitsAfterDecimal:INT; IncludeLeadingDigit:VbTriState; UseParensForNegativeNumbers:VbTriState; GroupDigits:VbTriState): BSTR;
  function FormatPercent(Expression:^variant; NumDigitsAfterDecimal:INT; IncludeLeadingDigit:VbTriState; UseParensForNegativeNumbers:VbTriState; GroupDigits:VbTriState): BSTR;
  function FormatCurrency(Expression:^variant; NumDigitsAfterDecimal:INT; IncludeLeadingDigit:VbTriState; UseParensForNegativeNumbers:VbTriState; GroupDigits:VbTriState): BSTR;
  function WeekdayName(Weekday:INT; Abbreviate:bool; FirstDayOfWeek:VbDayOfWeek): BSTR;
  function MonthName(Month:INT; Abbreviate:bool): BSTR;
  function Replace(Expression:BSTR; Find:BSTR; Replace:BSTR; Start:I4; Count:I4; Compare:VbCompareMethod): BSTR;
  function StrReverse(Expression:BSTR): BSTR;
  function Join(SourceArray:^variant; [Delimiter:^variant]): BSTR;
  function Filter(SourceArray:^variant; Match:BSTR; Include:bool; Compare:VbCompareMethod): variant;
  function InStrRev(StringCheck:BSTR; StringMatch:BSTR; Start:I4; Compare:VbCompareMethod): I4;
  function Split(Expression:BSTR; Delimiter:^variant; Limit:I4; Compare:VbCompareMethod): variant;

Module Conversion;
GUID={36785F40-2BCC-1069-82D6-00DD010EDFAA};
  function _B_str_Hex(Number:^variant): BSTR;
  function _B_var_Hex(Number:^variant): variant;
  function _B_str_Oct(Number:^variant): BSTR;
  function _B_var_Oct(Number:^variant): variant;
  function MacID(Constant:BSTR): I4;
  function _B_str_Str(Number:^variant): BSTR;
  function _B_var_Str(Number:^variant): variant;
  function Val(String:BSTR): R8;
  function CStr(Expression:^variant): BSTR;
  function CByte(Expression:^variant): UI1;
  function CBool(Expression:^variant): bool;
  function CCur(Expression:^variant): CY;
  function CDate(Expression:^variant): date;
  function CVDate(Expression:^variant): variant;
  function CInt(Expression:^variant): I2;
  function CLng(Expression:^variant): I4;
  function CSng(Expression:^variant): R4;
  function CDbl(Expression:^variant): R8;
  function CVar(Expression:^variant): variant;
  function CVErr(Expression:^variant): variant;
  function _B_str_Error([ErrorNumber:^variant]): BSTR;
  function _B_var_Error([ErrorNumber:^variant]): variant;
  function Fix(Number:^variant): variant;
  function Int(Number:^variant): variant;
  function CDec(Expression:^variant; out pvar:^variant): HResult;

Module FileSystem;
GUID={3738A200-2BCC-1069-82D7-00DD010EDFAA};
  function ChDir(Path:BSTR);
  function ChDrive(Drive:BSTR);
  function EOF(FileNumber:I2): bool;
  function FileAttr(FileNumber:I2; ReturnType:I2): I4;
  function FileCopy(Source:BSTR; Destination:BSTR);
  function FileDateTime(PathName:BSTR): variant;
  function FileLen(PathName:BSTR): I4;
  function GetAttr(PathName:BSTR): VbFileAttribute;
  function Kill(PathName:^variant);
  function Loc(FileNumber:I2): I4;
  function LOF(FileNumber:I2): I4;
  function MkDir(Path:BSTR);
  function Reset;
  function RmDir(Path:BSTR);
  function Seek(FileNumber:I2): I4;
  function SetAttr(PathName:BSTR; Attributes:VbFileAttribute);
  function _B_str_CurDir([Drive:^variant]): BSTR;
  function _B_var_CurDir([Drive:^variant]): variant;
  function FreeFile([RangeNumber:^variant]): I2;
  function Dir(PathName:^variant; Attributes:VbFileAttribute): BSTR;

Module DateTime;
GUID={37D75300-2BCC-1069-82D8-00DD010EDFAA};
  property-get _B_var_Date: variant;
  property-put _B_str_Date(BSTR);
  property-put _B_var_Date(^variant);
  property-get _B_str_Date: BSTR;
  function DateSerial(Year:I2; Month:I2; Day:I2): variant;
  function DateValue(Date:BSTR): variant;
  function Day(Date:^variant): variant;
  function Hour(Time:^variant): variant;
  function Minute(Time:^variant): variant;
  function Month(Date:^variant): variant;
  property-get Now: variant;
  function Second(Time:^variant): variant;
  property-get _B_var_Time: variant;
  property-put _B_str_Time(BSTR);
  property-put _B_var_Time(^variant);
  property-get _B_str_Time: BSTR;
  property-get Timer: R4;
  function TimeSerial(Hour:I2; Minute:I2; Second:I2): variant;
  function TimeValue(Time:BSTR): variant;
  function Weekday(Date:^variant; FirstDayOfWeek:VbDayOfWeek): variant;
  function Year(Date:^variant): variant;
  function DateAdd(Interval:BSTR; Number:R8; Date:^variant): variant;
  function DateDiff(Interval:BSTR; Date1:^variant; Date2:^variant; FirstDayOfWeek:VbDayOfWeek; FirstWeekOfYear:VbFirstWeekOfYear): variant;
  function DatePart(Interval:BSTR; Date:^variant; FirstDayOfWeek:VbDayOfWeek; FirstWeekOfYear:VbFirstWeekOfYear): variant;
  property-get Calendar: VbCalendar;
  property-put Calendar(VbCalendar);

Module Information;
GUID={38885380-2BCC-1069-82D9-00DD010EDFAA};
  function Erl: I4;
  function Err: ^ErrObject;
  function IMEStatus: VbIMEStatus;
  function IsArray(VarName:^variant): bool;
  function IsDate(Expression:^variant): bool;
  function IsEmpty(Expression:^variant): bool;
  function IsError(Expression:^variant): bool;
  function IsMissing(ArgName:^variant): bool;
  function IsNull(Expression:^variant): bool;
  function IsNumeric(Expression:^variant): bool;
  function IsObject(Expression:^variant): bool;
  function TypeName(VarName:^variant): BSTR;
  function VarType(VarName:^variant): VbVarType;
  function QBColor(Color:I2): I4;
  function RGB(Red:I2; Green:I2; Blue:I2): I4;

Module Interaction;
GUID={39302C40-2BCC-1069-82DA-00DD010EDFAA};
  function AppActivate(Title:^variant; [Wait:^variant]);
  function Beep;
  function CreateObject(Class:BSTR; ServerName:BSTR): variant;
  function DoEvents: I2;
  function GetObject([PathName:^variant; Class:^variant]): variant;
  function InputBox(Prompt:^variant; [Title:^variant; Default:^variant; XPos:^variant; YPos:^variant; HelpFile:^variant; Context:^variant]): BSTR;
  function MacScript(Script:BSTR): BSTR;
  function MsgBox(Prompt:^variant; Buttons:VbMsgBoxStyle; [Title:^variant; HelpFile:^variant; Context:^variant]): VbMsgBoxResult;
  function SendKeys(String:BSTR; [Wait:^variant]);
  function Shell(PathName:^variant; WindowStyle:VbAppWinStyle): R8;
  function Partition(Number:^variant; Start:^variant; Stop:^variant; Interval:^variant): variant;
  function Choose(Index:R4; Choice:^^variant): variant;
  function _B_var_Environ(Expression:^variant): variant;
  function _B_str_Environ(Expression:^variant): BSTR;
  function Switch(VarExpr:^^variant): variant;
  function _B_var_Command: variant;
  function _B_str_Command: BSTR;
  function IIf(Expression:^variant; TruePart:^variant; FalsePart:^variant): variant;
  function GetSetting(AppName:BSTR; Section:BSTR; Key:BSTR; [Default:variant]): BSTR;
  function SaveSetting(AppName:BSTR; Section:BSTR; Key:BSTR; Setting:BSTR);
  function DeleteSetting(AppName:BSTR; [Section:variant; Key:variant]);
  function GetAllSettings(AppName:BSTR; Section:BSTR): variant;
  function CallByName(Object:IDispatch; ProcName:BSTR; CallType:VbCallType; Args:^^variant; lcid:I4): variant;

Module Math;
GUID={39D67E60-2BCC-1069-82DB-00DD010EDFAA};
  function Abs(Number:^variant): variant;
  function Atn(Number:R8): R8;
  function Cos(Number:R8): R8;
  function Exp(Number:R8): R8;
  function Log(Number:R8): R8;
  function Randomize([Number:^variant]);
  function Rnd([Number:^variant]): R4;
  function Sin(Number:R8): R8;
  function Sqr(Number:R8): R8;
  function Tan(Number:R8): R8;
  function Sgn(Number:^variant): variant;
  function Round(Number:^variant; NumDigitsAfterDecimal:I4): variant;

Module Financial;
GUID={59B600C0-1C02-101B-8D72-00DD010EDFAA};
  function SLN(Cost:R8; Salvage:R8; Life:R8): R8;
  function SYD(Cost:R8; Salvage:R8; Life:R8; Period:R8): R8;
  function DDB(Cost:R8; Salvage:R8; Life:R8; Period:R8; [Factor:^variant]): R8;
  function IPmt(Rate:R8; Per:R8; NPer:R8; PV:R8; [FV:^variant; Due:^variant]): R8;
  function PPmt(Rate:R8; Per:R8; NPer:R8; PV:R8; [FV:^variant; Due:^variant]): R8;
  function Pmt(Rate:R8; NPer:R8; PV:R8; [FV:^variant; Due:^variant]): R8;
  function PV(Rate:R8; NPer:R8; Pmt:R8; [FV:^variant; Due:^variant]): R8;
  function FV(Rate:R8; NPer:R8; Pmt:R8; [PV:^variant; Due:^variant]): R8;
  function NPer(Rate:R8; Pmt:R8; PV:R8; [FV:^variant; Due:^variant]): R8;
  function Rate(NPer:R8; Pmt:R8; PV:R8; [FV:^variant; Due:^variant; Guess:^variant]): R8;
  function IRR(ValueArray:^^R8; [Guess:^variant]): R8;
  function MIRR(ValueArray:^^R8; FinanceRate:R8; ReinvestRate:R8): R8;
  function NPV(Rate:R8; ValueArray:^^R8): R8;

Module _HiddenModule;
GUID={CF1C2C60-0D25-1069-9427-00DD0111BF30};
  function Array(ArgList:^^variant): variant;
  function _B_str_InputB(Number:I4; FileNumber:I2): BSTR;
  function _B_var_InputB(Number:I4; FileNumber:I2): variant;
  function _B_str_Input(Number:I4; FileNumber:I2): BSTR;
  function _B_var_Input(Number:I4; FileNumber:I2): variant;
  function Width(FileNumber:I2; Width:I2);
  function VarPtr(Ptr:^void): I4;
  function StrPtr(Ptr:BSTR): I4;
  function ObjPtr(Ptr:IUnknown): I4;

Interface _HiddenInterface;
GUID={1E196B20-1F3C-1069-996B-00DD010EF676};
  function LCase;
  function Left;
  function LTrim;
  function Right;
  function RTrim;
  function Space;
  function Trim;
  function String;
  function UCase;
  function Str;
  function Chr;
  function Date;
  function Time;
  function Hex;
  function Oct;
  function LeftB;
  function RightB;
  function Mid;
  function MidB;
  function StrConv;
  function Error;
  function CurDir;
  function Format;
  function Environ;
  function Command;
  function ChrB;
  function ChrW;

Dispatch _ErrObject;
GUID={A4C466B8-499F-101B-BB78-00AA00383CBB};
  function QueryInterface(riid:^GUID; out ppvObj:^^void);
  function AddRef: UI4;
  function Release: UI4;
  function GetTypeInfoCount(out pctinfo:^UINT);
  function GetTypeInfo(itinfo:UINT; lcid:UI4; out pptinfo:^^void);
  function GetIDsOfNames(riid:^GUID; rgszNames:^^I1; cNames:UINT; lcid:UI4; out rgdispid:^I4);
  function Invoke(dispidMember:I4; riid:^GUID; lcid:UI4; wFlags:UI2; pdispparams:^DISPPARAMS; out pvarResult:^variant; out pexcepinfo:^EXCEPINFO; out puArgErr:^UINT);
  property-get Number: I4;
  property-put Number(I4);
  property-get Source: BSTR;
  property-put Source(BSTR);
  property-get Description: BSTR;
  property-put Description(BSTR);
  property-get HelpFile: BSTR;
  property-put HelpFile(BSTR);
  property-get HelpContext: I4;
  property-put HelpContext(I4);
  function Raise(Number:I4; [Source:^variant; Description:^variant; HelpFile:^variant; HelpContext:^variant]);
  function Clear;
  property-get LastDllError: I4;

Class ErrObject;
GUID={A4C46654-499F-101B-BB78-00AA00383CBB};
  function QueryInterface(riid:^GUID; out ppvObj:^^void);
  function AddRef: UI4;
  function Release: UI4;
  function GetTypeInfoCount(out pctinfo:^UINT);
  function GetTypeInfo(itinfo:UINT; lcid:UI4; out pptinfo:^^void);
  function GetIDsOfNames(riid:^GUID; rgszNames:^^I1; cNames:UINT; lcid:UI4; out rgdispid:^I4);
  function Invoke(dispidMember:I4; riid:^GUID; lcid:UI4; wFlags:UI2; pdispparams:^DISPPARAMS; out pvarResult:^variant; out pexcepinfo:^EXCEPINFO; out puArgErr:^UINT);
  property-get Number: I4;
  property-put Number(I4);
  property-get Source: BSTR;
  property-put Source(BSTR);
  property-get Description: BSTR;
  property-put Description(BSTR);
  property-get HelpFile: BSTR;
  property-put HelpFile(BSTR);
  property-get HelpContext: I4;
  property-put HelpContext(I4);
  function Raise(Number:I4; [Source:^variant; Description:^variant; HelpFile:^variant; HelpContext:^variant]);
  function Clear;
  property-get LastDllError: I4;

Dispatch _Collection;
GUID={A4C46780-499F-101B-BB78-00AA00383CBB};
  function QueryInterface(riid:^GUID; out ppvObj:^^void);
  function AddRef: UI4;
  function Release: UI4;
  function GetTypeInfoCount(out pctinfo:^UINT);
  function GetTypeInfo(itinfo:UINT; lcid:UI4; out pptinfo:^^void);
  function GetIDsOfNames(riid:^GUID; rgszNames:^^I1; cNames:UINT; lcid:UI4; out rgdispid:^I4);
  function Invoke(dispidMember:I4; riid:^GUID; lcid:UI4; wFlags:UI2; pdispparams:^DISPPARAMS; out pvarResult:^variant; out pexcepinfo:^EXCEPINFO; out puArgErr:^UINT);
  function Item(Index:^variant): variant;
  function Add(Item:^variant; [Key:^variant; Before:^variant; After:^variant]);
  function Count: I4;
  function Remove(Index:^variant);
  function _NewEnum: IUnknown;

Class Collection;
GUID={A4C4671C-499F-101B-BB78-00AA00383CBB};
  function QueryInterface(riid:^GUID; out ppvObj:^^void);
  function AddRef: UI4;
  function Release: UI4;
  function GetTypeInfoCount(out pctinfo:^UINT);
  function GetTypeInfo(itinfo:UINT; lcid:UI4; out pptinfo:^^void);
  function GetIDsOfNames(riid:^GUID; rgszNames:^^I1; cNames:UINT; lcid:UI4; out rgdispid:^I4);
  function Invoke(dispidMember:I4; riid:^GUID; lcid:UI4; wFlags:UI2; pdispparams:^DISPPARAMS; out pvarResult:^variant; out pexcepinfo:^EXCEPINFO; out puArgErr:^UINT);
  function Item(Index:^variant): variant;
  function Add(Item:^variant; [Key:^variant; Before:^variant; After:^variant]);
  function Count: I4;
  function Remove(Index:^variant);
  function _NewEnum: IUnknown;
